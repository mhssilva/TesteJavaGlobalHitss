package com.example;
import java.util.LinkedList;
//import java.util.Scanner;

/**
A tarefa aqui é escrever uma lista. Cada elemento deve conhecer o elemento antes e
 * depois disso. Imprima sua lista e remova o elemento no meio
 * a lista. Imprima novamente.
 *
 * 
 */
public class TASK2 {
	


	   private static int posicaoParaRemover;

	public static void main(String[] args) {
	    	        System.out.println("Exercicio 2\n");

	    	        LinkedList<Integer> numeros = new LinkedList<>();	    	  
	    	        numeros.add(1);
	    	        numeros.add(2);
	    	        numeros.add(3);
	    	        numeros.add(4);
	    	        numeros.add(5);
	    	        numeros.add(6);
	    	        numeros.add(7);
	    	        numeros.add(8);
	    	        numeros.add(9);
	    	        numeros.add(10);
	    	      

	    	        System.out.println("Lista de números: \n" + numeros);

	    	        setPosicaoParaRemover(numeros.size() / 2);

	    	        int indiceElementoMeio = 0;
					if (numeros.size() % 2 == 0) {
	    	            numeros.remove(indiceElementoMeio - 1);
	    	        } else {
	    	            numeros.remove(indiceElementoMeio);
	    	        }

	    	        System.out.println("Lista sem o número do meio: \n" + numeros);
	    	    }

	public static int getPosicaoParaRemover() {
		return posicaoParaRemover;
	}

	public static void setPosicaoParaRemover(int posicaoParaRemover) {
		TASK2.posicaoParaRemover = posicaoParaRemover;
	}
        
       /* System.out.println("Digite seu nome completo: ");
        Scanner entrada = new Scanner(System.in);
        String nome = entrada.nextLine();

        ignoreMiddleName(nome);*/
    }
	   /* public static void ignoreMiddleName(String fullName) {
	        String[] names = fullName.split(" ");

	        System.out.println(names[0] + " " + names[names.length - 1]);
	    }*/
	    

